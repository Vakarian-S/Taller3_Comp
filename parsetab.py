
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN COMMA DIV ENT EQ ID LANGLE LCOMMENT LPARENT LSQUARE LT MIENTRAS MINUS MULT NOT NUMBER PLUS RANGLE REP RET RPARENT RSQUARE SCOMMENT SEMICOLON SI SINO VACUOprograma : lista_decllista_decl : lista_decl declaracion lista_decl : declaraciondeclaracion : declaracion_vardeclaracion : declaracion_fundeclaracion_var : def_tipo ID SEMICOLONdeclaracion_var : def_tipo ID LANGLE NUMBER RANGLE SEMICOLONdef_tipo : VACUOdef_tipo : ENTdeclaracion_fun : def_tipo ID LSQUARE parametros RSQUARE sentencia_compparametros : lista_parametrosparametros : VACUOlista_parametros : lista_parametros COMMA paramlista_parametros : paramparam : def_tipo ID\n             | def_tipo ID LANGLE RANGLEsentencia_comp : LPARENT declaraciones_locales lista_sentencias RPARENT declaraciones_locales : declaraciones_locales declaracion_vardeclaraciones_locales : empty lista_sentencias : lista_sentencias sentencia lista_sentencias : empty sentencia : sentencia_expr\n                 | sentencia_comp\n                 | sentencia_seleccion\n                 | sentencia_iteracion\n                 | sentencia_retornosentencia_expr : expresion SEMICOLON sentencia_expr : SEMICOLON sentencia_seleccion : SI LSQUARE expresion RSQUARE sentencia sentencia_seleccion : SI LSQUARE expresion RSQUARE sentencia SINO sentencia sentencia_iteracion : MIENTRAS LSQUARE expresion RSQUARE sentencia sentencia_iteracion : REP sentencia_comp sentencia_retorno : RET SEMICOLON sentencia_retorno : RET expresion SEMICOLON expresion : var ASSIGN expresion expresion : expresion_negada var : ID var : ID LANGLE expresion RANGLEexpresion_negada : NOT LSQUARE expresion_logica RSQUARE expresion_negada : expresion_logica expresion_logica : expresion_logica AND expresion_simple expresion_logica : expresion_logica AND NOT LSQUARE expresion_simple RSQUARE expresion_logica : expresion_simple expresion_logica : NOT LSQUARE expresion_simple RSQUARE expresion_simple :  expresion_simple relop expresion_aditiva  expresion_simple : expresion_aditiva  relop : LTrelop : EQexpresion_aditiva : expresion_aditiva addop term  expresion_aditiva : term addop : PLUSaddop : MINUSterm : term mulop factorterm : factormulop : MULTmulop : DIVfactor : LSQUARE expresion RSQUARE factor : var factor : invocacion factor : NUMBER invocacion : ID LSQUARE argumentos RSQUARE  argumentos : lista_arg argumentos : emptylista_arg : lista_arg COMMA expresion lista_arg : expresion empty :'
    
_lr_action_items = {'VACUO':([0,2,3,4,5,9,11,13,23,24,26,27,30,31,33,36,],[7,7,-3,-4,-5,-2,-6,18,7,-7,-10,-66,7,-19,-18,-17,]),'ENT':([0,2,3,4,5,9,11,13,23,24,26,27,30,31,33,36,],[8,8,-3,-4,-5,-2,-6,8,8,-7,-10,-66,8,-19,-18,-17,]),'$end':([1,2,3,4,5,9,11,24,26,36,],[0,-1,-3,-4,-5,-2,-6,-7,-10,-17,]),'ID':([6,7,8,11,15,18,24,27,30,31,32,33,34,35,36,37,38,39,40,41,42,44,46,49,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,102,103,106,107,110,111,112,116,118,],[10,-8,-9,-6,21,-8,-7,-66,-66,-19,52,-18,-21,61,-17,-20,-22,-23,-24,-25,-26,-28,52,52,-27,52,52,-32,-33,52,52,52,52,52,52,-47,-48,52,-51,-52,52,-55,-56,-34,52,52,52,52,52,-29,-31,52,-30,]),'SEMICOLON':([10,11,20,24,27,30,31,32,33,34,36,37,38,39,40,41,42,43,44,49,50,51,52,54,55,56,57,58,59,60,61,62,66,67,68,84,86,87,96,97,99,100,101,102,103,104,105,108,109,111,112,116,117,118,],[11,-6,24,-7,-66,-66,-19,44,-18,-21,-17,-20,-22,-23,-24,-25,-26,62,-28,67,-58,-36,-37,-40,-43,-46,-50,-54,-59,-60,11,-27,-32,-33,86,-57,-34,-35,-58,-41,-45,-49,-53,44,44,-38,-61,-39,-44,-29,-31,44,-42,-30,]),'LANGLE':([10,21,52,61,],[12,25,70,12,]),'LSQUARE':([10,11,24,27,30,31,32,33,34,36,37,38,39,40,41,42,44,45,46,47,49,52,53,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,93,98,102,103,106,107,110,111,112,116,118,],[13,-6,-7,-66,-66,-19,46,-18,-21,-17,-20,-22,-23,-24,-25,-26,-28,63,46,65,46,71,72,-27,46,46,-32,-33,46,46,46,46,46,46,-47,-48,46,-51,-52,46,-55,-56,-34,107,110,46,46,46,46,46,-29,-31,46,-30,]),'RPARENT':([11,24,27,30,31,32,33,34,36,37,38,39,40,41,42,44,62,66,67,86,111,112,118,],[-6,-7,-66,-66,-19,36,-18,-21,-17,-20,-22,-23,-24,-25,-26,-28,-27,-32,-33,-34,-29,-31,-30,]),'LPARENT':([11,22,24,27,30,31,32,33,34,36,37,38,39,40,41,42,44,48,62,66,67,86,102,103,111,112,116,118,],[-6,27,-7,-66,-66,-19,27,-18,-21,-17,-20,-22,-23,-24,-25,-26,-28,27,-27,-32,-33,-34,27,27,-29,-31,27,-30,]),'SI':([11,24,27,30,31,32,33,34,36,37,38,39,40,41,42,44,62,66,67,86,102,103,111,112,116,118,],[-6,-7,-66,-66,-19,45,-18,-21,-17,-20,-22,-23,-24,-25,-26,-28,-27,-32,-33,-34,45,45,-29,-31,45,-30,]),'MIENTRAS':([11,24,27,30,31,32,33,34,36,37,38,39,40,41,42,44,62,66,67,86,102,103,111,112,116,118,],[-6,-7,-66,-66,-19,47,-18,-21,-17,-20,-22,-23,-24,-25,-26,-28,-27,-32,-33,-34,47,47,-29,-31,47,-30,]),'REP':([11,24,27,30,31,32,33,34,36,37,38,39,40,41,42,44,62,66,67,86,102,103,111,112,116,118,],[-6,-7,-66,-66,-19,48,-18,-21,-17,-20,-22,-23,-24,-25,-26,-28,-27,-32,-33,-34,48,48,-29,-31,48,-30,]),'RET':([11,24,27,30,31,32,33,34,36,37,38,39,40,41,42,44,62,66,67,86,102,103,111,112,116,118,],[-6,-7,-66,-66,-19,49,-18,-21,-17,-20,-22,-23,-24,-25,-26,-28,-27,-32,-33,-34,49,49,-29,-31,49,-30,]),'NOT':([11,24,27,30,31,32,33,34,36,37,38,39,40,41,42,44,46,49,62,63,65,66,67,69,70,71,72,73,86,102,103,106,111,112,116,118,],[-6,-7,-66,-66,-19,53,-18,-21,-17,-20,-22,-23,-24,-25,-26,-28,53,53,-27,53,53,-32,-33,53,53,53,93,98,-34,53,53,53,-29,-31,53,-30,]),'NUMBER':([11,12,24,27,30,31,32,33,34,36,37,38,39,40,41,42,44,46,49,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,86,102,103,106,107,110,111,112,116,118,],[-6,14,-7,-66,-66,-19,60,-18,-21,-17,-20,-22,-23,-24,-25,-26,-28,60,60,-27,60,60,-32,-33,60,60,60,60,60,60,-47,-48,60,-51,-52,60,-55,-56,-34,60,60,60,60,60,-29,-31,60,-30,]),'RANGLE':([14,25,50,51,52,54,55,56,57,58,59,60,84,87,88,96,97,99,100,101,104,105,108,109,117,],[20,29,-58,-36,-37,-40,-43,-46,-50,-54,-59,-60,-57,-35,104,-58,-41,-45,-49,-53,-38,-61,-39,-44,-42,]),'RSQUARE':([16,17,18,19,21,28,29,50,51,52,54,55,56,57,58,59,60,64,71,83,84,85,87,89,90,91,92,94,95,96,97,99,100,101,104,105,108,109,113,114,115,117,],[22,-11,-12,-14,-15,-13,-16,-58,-36,-37,-40,-43,-46,-50,-54,-59,-60,84,-66,102,-57,103,-35,105,-62,-63,-65,108,109,-58,-41,-45,-49,-53,-38,-61,-39,-44,-64,109,117,-42,]),'COMMA':([17,19,21,28,29,50,51,52,54,55,56,57,58,59,60,84,87,90,92,96,97,99,100,101,104,105,108,109,113,117,],[23,-14,-15,-13,-16,-58,-36,-37,-40,-43,-46,-50,-54,-59,-60,-57,-35,106,-65,-58,-41,-45,-49,-53,-38,-61,-39,-44,-64,-42,]),'SINO':([36,38,39,40,41,42,44,62,66,67,86,111,112,118,],[-17,-22,-23,-24,-25,-26,-28,-27,-32,-33,-34,116,-31,-30,]),'ASSIGN':([50,52,104,],[69,-37,-38,]),'MULT':([50,52,57,58,59,60,84,96,100,101,104,105,],[-58,-37,81,-54,-59,-60,-57,-58,81,-53,-38,-61,]),'DIV':([50,52,57,58,59,60,84,96,100,101,104,105,],[-58,-37,82,-54,-59,-60,-57,-58,82,-53,-38,-61,]),'PLUS':([50,52,56,57,58,59,60,84,96,99,100,101,104,105,],[-58,-37,78,-50,-54,-59,-60,-57,-58,78,-49,-53,-38,-61,]),'MINUS':([50,52,56,57,58,59,60,84,96,99,100,101,104,105,],[-58,-37,79,-50,-54,-59,-60,-57,-58,79,-49,-53,-38,-61,]),'LT':([50,52,55,56,57,58,59,60,84,95,96,97,99,100,101,104,105,114,115,],[-58,-37,75,-46,-50,-54,-59,-60,-57,75,-58,75,-45,-49,-53,-38,-61,75,75,]),'EQ':([50,52,55,56,57,58,59,60,84,95,96,97,99,100,101,104,105,114,115,],[-58,-37,76,-46,-50,-54,-59,-60,-57,76,-58,76,-45,-49,-53,-38,-61,76,76,]),'AND':([50,52,54,55,56,57,58,59,60,84,94,95,96,97,99,100,101,104,105,109,117,],[-58,-37,73,-43,-46,-50,-54,-59,-60,-57,73,-43,-58,-41,-45,-49,-53,-38,-61,-44,-42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'lista_decl':([0,],[2,]),'declaracion':([0,2,],[3,9,]),'declaracion_var':([0,2,30,],[4,4,33,]),'declaracion_fun':([0,2,],[5,5,]),'def_tipo':([0,2,13,23,30,],[6,6,15,15,35,]),'parametros':([13,],[16,]),'lista_parametros':([13,],[17,]),'param':([13,23,],[19,28,]),'sentencia_comp':([22,32,48,102,103,116,],[26,39,66,39,39,39,]),'declaraciones_locales':([27,],[30,]),'empty':([27,30,71,],[31,34,91,]),'lista_sentencias':([30,],[32,]),'sentencia':([32,102,103,116,],[37,111,112,118,]),'sentencia_expr':([32,102,103,116,],[38,38,38,38,]),'sentencia_seleccion':([32,102,103,116,],[40,40,40,40,]),'sentencia_iteracion':([32,102,103,116,],[41,41,41,41,]),'sentencia_retorno':([32,102,103,116,],[42,42,42,42,]),'expresion':([32,46,49,63,65,69,70,71,102,103,106,116,],[43,64,68,83,85,87,88,92,43,43,113,43,]),'var':([32,46,49,63,65,69,70,71,72,73,74,77,80,102,103,106,107,110,116,],[50,50,50,50,50,50,50,50,96,96,96,96,96,50,50,50,96,96,50,]),'expresion_negada':([32,46,49,63,65,69,70,71,102,103,106,116,],[51,51,51,51,51,51,51,51,51,51,51,51,]),'expresion_logica':([32,46,49,63,65,69,70,71,72,102,103,106,116,],[54,54,54,54,54,54,54,54,94,54,54,54,54,]),'expresion_simple':([32,46,49,63,65,69,70,71,72,73,102,103,106,107,110,116,],[55,55,55,55,55,55,55,55,95,97,55,55,55,114,115,55,]),'expresion_aditiva':([32,46,49,63,65,69,70,71,72,73,74,102,103,106,107,110,116,],[56,56,56,56,56,56,56,56,56,56,99,56,56,56,56,56,56,]),'term':([32,46,49,63,65,69,70,71,72,73,74,77,102,103,106,107,110,116,],[57,57,57,57,57,57,57,57,57,57,57,100,57,57,57,57,57,57,]),'factor':([32,46,49,63,65,69,70,71,72,73,74,77,80,102,103,106,107,110,116,],[58,58,58,58,58,58,58,58,58,58,58,58,101,58,58,58,58,58,58,]),'invocacion':([32,46,49,63,65,69,70,71,72,73,74,77,80,102,103,106,107,110,116,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'relop':([55,95,97,114,115,],[74,74,74,74,74,]),'addop':([56,99,],[77,77,]),'mulop':([57,100,],[80,80,]),'argumentos':([71,],[89,]),'lista_arg':([71,],[90,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> lista_decl','programa',1,'p_programa','parser.py',11),
  ('lista_decl -> lista_decl declaracion','lista_decl',2,'p_lista_decl1','parser.py',15),
  ('lista_decl -> declaracion','lista_decl',1,'p_lista_decl2','parser.py',28),
  ('declaracion -> declaracion_var','declaracion',1,'p_declaracion1','parser.py',32),
  ('declaracion -> declaracion_fun','declaracion',1,'p_declaracion2','parser.py',36),
  ('declaracion_var -> def_tipo ID SEMICOLON','declaracion_var',3,'p_declaracion_var1','parser.py',40),
  ('declaracion_var -> def_tipo ID LANGLE NUMBER RANGLE SEMICOLON','declaracion_var',6,'p_declaracion_var2','parser.py',44),
  ('def_tipo -> VACUO','def_tipo',1,'p_def_tipo1','parser.py',48),
  ('def_tipo -> ENT','def_tipo',1,'p_def_tipo2','parser.py',53),
  ('declaracion_fun -> def_tipo ID LSQUARE parametros RSQUARE sentencia_comp','declaracion_fun',6,'p_declaracion_fun','parser.py',56),
  ('parametros -> lista_parametros','parametros',1,'p_parametros1','parser.py',60),
  ('parametros -> VACUO','parametros',1,'p_parametros2','parser.py',65),
  ('lista_parametros -> lista_parametros COMMA param','lista_parametros',3,'p_lista_parametros1','parser.py',69),
  ('lista_parametros -> param','lista_parametros',1,'p_lista_parametros2','parser.py',81),
  ('param -> def_tipo ID','param',2,'p_param','parser.py',85),
  ('param -> def_tipo ID LANGLE RANGLE','param',4,'p_param','parser.py',86),
  ('sentencia_comp -> LPARENT declaraciones_locales lista_sentencias RPARENT','sentencia_comp',4,'p_sentencia_comp','parser.py',90),
  ('declaraciones_locales -> declaraciones_locales declaracion_var','declaraciones_locales',2,'p_declaraciones_locales1','parser.py',94),
  ('declaraciones_locales -> empty','declaraciones_locales',1,'p_declaraciones_locales2','parser.py',107),
  ('lista_sentencias -> lista_sentencias sentencia','lista_sentencias',2,'p_lista_sentencias1','parser.py',111),
  ('lista_sentencias -> empty','lista_sentencias',1,'p_lista_sentencias2','parser.py',123),
  ('sentencia -> sentencia_expr','sentencia',1,'p_sentencia','parser.py',127),
  ('sentencia -> sentencia_comp','sentencia',1,'p_sentencia','parser.py',128),
  ('sentencia -> sentencia_seleccion','sentencia',1,'p_sentencia','parser.py',129),
  ('sentencia -> sentencia_iteracion','sentencia',1,'p_sentencia','parser.py',130),
  ('sentencia -> sentencia_retorno','sentencia',1,'p_sentencia','parser.py',131),
  ('sentencia_expr -> expresion SEMICOLON','sentencia_expr',2,'p_sentencia_expr1','parser.py',135),
  ('sentencia_expr -> SEMICOLON','sentencia_expr',1,'p_sentencia_expr2','parser.py',139),
  ('sentencia_seleccion -> SI LSQUARE expresion RSQUARE sentencia','sentencia_seleccion',5,'p_sentencia_seleccion1','parser.py',143),
  ('sentencia_seleccion -> SI LSQUARE expresion RSQUARE sentencia SINO sentencia','sentencia_seleccion',7,'p_sentencia_seleccion2','parser.py',147),
  ('sentencia_iteracion -> MIENTRAS LSQUARE expresion RSQUARE sentencia','sentencia_iteracion',5,'p_sentencia_iteracion1','parser.py',152),
  ('sentencia_iteracion -> REP sentencia_comp','sentencia_iteracion',2,'p_sentencia_iteracion2','parser.py',156),
  ('sentencia_retorno -> RET SEMICOLON','sentencia_retorno',2,'p_sentencia_retorno1','parser.py',160),
  ('sentencia_retorno -> RET expresion SEMICOLON','sentencia_retorno',3,'p_sentencia_retorno2','parser.py',164),
  ('expresion -> var ASSIGN expresion','expresion',3,'p_expresion1','parser.py',168),
  ('expresion -> expresion_negada','expresion',1,'p_expresion2','parser.py',172),
  ('var -> ID','var',1,'p_var1','parser.py',176),
  ('var -> ID LANGLE expresion RANGLE','var',4,'p_var2','parser.py',180),
  ('expresion_negada -> NOT LSQUARE expresion_logica RSQUARE','expresion_negada',4,'p_expresion_negada1','parser.py',185),
  ('expresion_negada -> expresion_logica','expresion_negada',1,'p_expresion_negada2','parser.py',189),
  ('expresion_logica -> expresion_logica AND expresion_simple','expresion_logica',3,'p_expresion_logica1','parser.py',193),
  ('expresion_logica -> expresion_logica AND NOT LSQUARE expresion_simple RSQUARE','expresion_logica',6,'p_expresion_logica2','parser.py',197),
  ('expresion_logica -> expresion_simple','expresion_logica',1,'p_expresion_logica3','parser.py',201),
  ('expresion_logica -> NOT LSQUARE expresion_simple RSQUARE','expresion_logica',4,'p_expresion_logica4','parser.py',205),
  ('expresion_simple -> expresion_simple relop expresion_aditiva','expresion_simple',3,'p_expresion_simple1','parser.py',209),
  ('expresion_simple -> expresion_aditiva','expresion_simple',1,'p_expresion_simple2','parser.py',214),
  ('relop -> LT','relop',1,'p_relop1','parser.py',219),
  ('relop -> EQ','relop',1,'p_relop2','parser.py',223),
  ('expresion_aditiva -> expresion_aditiva addop term','expresion_aditiva',3,'p_expresion_aditiva1','parser.py',227),
  ('expresion_aditiva -> term','expresion_aditiva',1,'p_expresion_aditiva2','parser.py',231),
  ('addop -> PLUS','addop',1,'p_addop1','parser.py',235),
  ('addop -> MINUS','addop',1,'p_addop2','parser.py',239),
  ('term -> term mulop factor','term',3,'p_term1','parser.py',243),
  ('term -> factor','term',1,'p_term2','parser.py',247),
  ('mulop -> MULT','mulop',1,'p_mulop1','parser.py',251),
  ('mulop -> DIV','mulop',1,'p_mulop2','parser.py',255),
  ('factor -> LSQUARE expresion RSQUARE','factor',3,'p_factor1','parser.py',259),
  ('factor -> var','factor',1,'p_factor2','parser.py',263),
  ('factor -> invocacion','factor',1,'p_factor3','parser.py',267),
  ('factor -> NUMBER','factor',1,'p_factor4','parser.py',271),
  ('invocacion -> ID LSQUARE argumentos RSQUARE','invocacion',4,'p_invocacion','parser.py',275),
  ('argumentos -> lista_arg','argumentos',1,'p_argumentos1','parser.py',279),
  ('argumentos -> empty','argumentos',1,'p_argumentos2','parser.py',283),
  ('lista_arg -> lista_arg COMMA expresion','lista_arg',3,'p_lista_arg1','parser.py',287),
  ('lista_arg -> expresion','lista_arg',1,'p_lista_arg2','parser.py',304),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',310),
]
